##########################################
#                PreCommit               #
##########################################
[tool.autoflake]
in-place = true
remove-all-unused-imports = true
ignore-init-module-imports = true

[tool.isort]
profile = "black"
skip_glob = [
    "__pycache__/*",
    "venv/*",
    "alembic/*",
    "app/api/endpoints/__init__.py",
    "app/core/base.py",
    "app/models/__init__.py",
]

[tool.black]
line-length = 88
skip-string-normalization = true

[tool.flake8]
max-line-length = 88
ignore = ["F821", "W503", "E701"]
exclude = [
    "__pycache__/*",
    "venv/*",
    "alembic/*",
    "app/api/endpoints/__init__.py",
    "app/core/base.py",
    "app/models/__init__.py",
]

[tool.ruff]
exclude = [
    "__pycache__/*",
    "venv/*",
    "alembic/*",
    "app/api/endpoints/__init__.py",
    "app/core/base.py",
    "app/models/__init__.py",
]
lint.select = ["E", "W", "F", "C", "N"]
lint.ignore = ["F821"]
line-length = 88

##########################################
#                  MyPy                  #
##########################################
[tool.mypy]
python_version = "3.12"
mypy_path = "$MYPY_CONFIG_FILE_DIR/app/"

exclude = ["app/tests/*", "alembic/*", "venv/*", "orval_schemas/*"]
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

strict = true


##########################################
#                 Pytest                 #
##########################################
[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning"]
asyncio_mode = "auto"
testpaths = ["app/tests"]
pythonpath = "."
markers = [
    "exclude_from_ci: тесты, которые исключаются на CI",
    "run: custom marker for test execution order",
]

##########################################
#                 Poetry                 #
##########################################
[tool.poetry.group.dev.dependencies]
ruff = "^0.9.3"
black = "^24.10.0"
pre-commit = "^4.1.0"
mypy = "^1.14.1"
flake8-pyproject = "^1.2.3"
pytest = "^8.3.4"
pytest-asyncio = "^0.25.2"
orjson = "^3.10.15"
pytest-cov = "^6.0.0"
httpx = "0.27.0"
sqlalchemy = { extras = ["mypy"], version = "^2.0.38" }

[tool.poetry]
packages = [{ include = "app" }]

[project]
name = "exchange.api"
version = "0.1.0"
description = ""
authors = [{ name = "Рожков Максим", email = "r.maximka@mail.ru" }]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "fastapi (>=0.115.7,<0.116.0)",
    "sqlalchemy (>=2.0.37,<3.0.0)",
    "alembic (>=1.14.1,<2.0.0)",
    "uvicorn (>=0.34.0,<0.35.0)",
    "pydantic-settings (>=2.7.1,<3.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "gunicorn (>=23.0.0,<24.0.0)",
    "deepmerge (>=2.0,<3.0)",
    "greenlet (>=3.1.1,<4.0.0)",
    "orjson (>=3.10.16,<4.0.0)",
    "requests (>=2.32.3,<3.0.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
